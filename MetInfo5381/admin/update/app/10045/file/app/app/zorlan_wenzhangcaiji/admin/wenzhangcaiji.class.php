<?php
defined('IN_MET') or exit('No permission');load::sys_class('admin'); load::own_func('common'); class wenzhangcaiji extends admin{ public function __construct() { global $_M; parent::__construct(); nav::set_nav(1, "采集文章插件", $_M['url']['own_form'].'a=doindex'); nav::set_nav(99, "升级版采集插件", $_M[url][adminurl].'n=appstore&c=appstore&a=doappdetail&type=app&no=10026'); } public function doindex() { global $_M; nav::select_nav(1); require_once $this -> template('own/index'); } public function doupgraded() { global $_M; nav::select_nav(99); require_once $this -> template('own/upgraded'); } public static function return_data($data,$isajax=false){ if($isajax){ die(json_encode($data)); }else{ return $data; } } public function docaiji(){ global $_M; $return['success']=false; $isajax=intval($_M['form']['isajax']); $articleurl=trim($_M['form']['articleurl']); if(empty($articleurl)){ $return['error']='请输入文章网址！'; return self::return_data($return,$isajax); } $charset=$_M['form']['charset']; $cont_filtertag = preg_replace('/[\s\,\，]+/', ',', trim($_M['form']['filtertag'])); if($cont_filtertag){ $cont_filtertag=explode(',', $cont_filtertag); $cont_filtertag=array_unique($cont_filtertag); $cont_filtertag=implode(',', $cont_filtertag); } $cont_replace1=$_M['form']['cont_replace1']; $cont_replace2=$_M['form']['cont_replace2']; $cont_replace1=$cont_replace2=array(); foreach ($_M['form']['cont_replace1'] as $crk=>$crv){ $crv=trim($crv); if(!empty($crv)){ $crv=preg_replace('/\\\+/', '\\', $crv); $cont_replace1[]=preg_replace('/\\\*([\'\/])/', "\\\\$1", $crv); $cont_replace2[]=trim($_M['form']['cont_replace2'][$crk]); } } $html=curl_get_html($articleurl,$charset); if($html){ load::own_class('readability'); $Readability = new Readability($html, 'utf-8'); $ReadabilityData = $Readability->getContent(); $cont_title=trim($ReadabilityData['title']); $cont_content=trim($ReadabilityData['content']); }else{ $return['error']='未获取到网页'; return self::return_data($return,$isajax); } if($cont_content){ foreach ($cont_replace1 as $pcrk=>$pcrv){ $cont_content=preg_replace('/'.$pcrv.'/i',$cont_replace2[$pcrk],$cont_content); } $cont_content=filter_html_tags($cont_content, $cont_filtertag); $base_url=match_base_url($articleurl, $html); $domain_url=match_domain_url($articleurl); try { $cont_content=preg_replace('/(?<=href\=[\'\"])([^\'\"]*)(?=[\'\"])/ie', "create_complete_url('\\1','".$base_url."','".$domain_url."')", $cont_content); $cont_content=preg_replace('/(?<=src\=[\'\"])([^\'\"]*)(?=[\'\"])/ie', "create_complete_url('\\0','".$base_url."','".$domain_url."')", $cont_content); }catch (Exception $ex){ $return['error']='内容网址转换出错'; return self::return_data($return,$isajax); } }else{ $return['error']='未获取到内容'; return self::return_data($return,$isajax); } $return['success']=true; $return['title']=$cont_title; $return['content']=$cont_content; if($isajax){ return self::return_data($return,$isajax); }else{ return $return; } } public function dofabu(){ global $_M; $isajax=intval($_M['form']['isajax']); $_M['form']['isajax']=false; $data=$this->docaiji(); $_M['form']['isajax']=$isajax; $data['column']=array( 'column1'=>intval($_M['form']['column1']), 'column2'=>intval($_M['form']['column2']), 'column3'=>intval($_M['form']['column3']) ); $data['operate']=$_M['form']['operate']; $status=publish_article($data); if($status['success']){ $news=DB::get_one("SELECT * FROM {$_M['table']['news']} WHERE `id`='{$status['newsid']}'"); $class1=DB::get_one("SELECT * FROM {$_M['table']['column']} WHERE `id`='{$news['class1']}'"); $newsHtml="发布成功！ <a href=\"{$_M[url][site_admin]}content/article/content.php?action=editor&lang={$class1[lang]}&id={$status[newsid]}\" target='_blank'>查看后台文章</a>" ."&nbsp; &nbsp;<a href=\"{$_M[url][site]}{$class1[foldername]}/shownews.php?lang={$class1[lang]}&id={$status['newsid']}\" target='_blank'>查看前台文章</a>"; $status['html']=$newsHtml; } if($isajax){ echo json_encode($status); }else{ return $status; } } public function template_column_list($column_list,$column_value){ global $_M; require_once $this -> template('own/column_list'); } } ?>